# Workflow to construct the most recent release with WireGuard Manager
name: Construct Most Recent Release

# Define the events that trigger the workflow
on:
  # Trigger the workflow on push for .sh files
  push:
    paths:
      - "**.sh"
  # Trigger the workflow on pull request for .sh files
  pull_request:
    paths:
      - "**.sh"
  # Allow manual triggering of the workflow
  workflow_dispatch:

# Define the jobs in the workflow
jobs:
  # Job to build and test WireGuard Manager
  build:
    # Display name of the job
    name: Build on Ubuntu
    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest
    # Environment variables used throughout the job
    env:
      IP_SERVICE_NAME: checkip.amazonaws.com
      IP_SERVICE_URL: https://checkip.amazonaws.com

    steps:
      # Step 1: Checkout the repository code
      - name: Check out Repository Code
        uses: actions/checkout@v5

      # Step 2: Install required tools
      - name: Install Required Tools
        run: sudo apt-get update && sudo apt-get install curl -y

      # Step 3: Test network connectivity
      - name: Test Network Connectivity
        run: curl "${{ env.IP_SERVICE_URL }}"

      # Step 4: Install WireGuard Manager
      - name: Install WireGuard Manager
        run: sudo bash -x wireguard-manager.sh --install

      # Step 5: Stop WireGuard service
      - name: Stop WireGuard Service
        run: sudo bash -x wireguard-manager.sh --stop

      # Step 6: Start WireGuard service
      - name: Start WireGuard Service
        run: sudo bash -x wireguard-manager.sh --start

      # Step 7: Restart WireGuard service
      - name: Restart WireGuard Service
        run: sudo bash -x wireguard-manager.sh --restart

      # Step 8: View WireGuard service status
      - name: View WireGuard Status
        run: sudo systemctl status wg-quick@wg0

      # Step 9: Add multiple WireGuard peers (10 in this case)
      - name: Add Multiple WireGuard Peers
        run: for i in {1..10}; do echo -e "\n" | sudo bash -x wireguard-manager.sh --add; done

      # Step 10: Update dynamic DNS settings
      - name: Update Dynamic DNS Settings
        run: sudo IP_UPDATE_METHOD=1 bash -x wireguard-manager.sh --ddns

      # Step 11: Create a WireGuard backup
      - name: Create WireGuard Backup
        run: sudo bash -x wireguard-manager.sh --backup

      # Step 12: List all WireGuard peers
      - name: List WireGuard Peers
        run: sudo bash -x wireguard-manager.sh --list

      # Step 13: Update WireGuard Manager
      - name: Update WireGuard Manager
        run: sudo bash -x wireguard-manager.sh --update

      # Step 14: Allow full access to WireGuard files (for testing or review purposes)
      - name: Allow Access to Files
        run: sudo chmod -R 777 /etc/wireguard/

      # Step 15: Display WireGuard and related configuration files
      - name: Show Configuration Files
        run: |
          for file in \
            /etc/wireguard/wg0.conf \
            /etc/unbound/unbound.conf \
            /var/lib/unbound/root.key \
            /etc/unbound/root.hints \
            /etc/unbound/unbound.conf.d/hosts.conf \
            /etc/resolv.conf \
            /etc/wireguard/clients/*; do
            if [ -f "$file" ]; then
              echo "Showing $file"
              cat "$file"
            else
              echo "File $file not found"
            fi
          done

      # Step 16: Restrict access to WireGuard files
      - name: Restore File Permissions
        run: sudo chmod -R 600 /etc/wireguard/

      # Step 17: Display current crontab rules
      - name: Display Crontab Rules
        run: sudo crontab -l

      # Step 18: Purge WireGuard configuration
      - name: Purge WireGuard Configuration
        run: sudo ./wireguard-manager.sh --purge

      # Step 19: Uninstall WireGuard Manager
      - name: Uninstall WireGuard Manager
        run: sudo ./wireguard-manager.sh --uninstall

      # Step 20: Display configuration files post-uninstallation
      - name: Show Configuration Files (Post-Uninstallation)
        run: |
          for file in \
            /etc/wireguard/wg0.conf \
            /etc/unbound/unbound.conf \
            /var/lib/unbound/root.key \
            /etc/unbound/root.hints \
            /etc/unbound/unbound.conf.d/hosts.conf \
            /etc/resolv.conf \
            /etc/wireguard/clients/*; do
            if [ -f "$file" ]; then
              echo "Showing $file"
              cat "$file"
            else
              echo "File $file not found"
            fi
          done

      # Step 21: Display crontab rules post-uninstallation
      - name: Display Crontab Rules Post-Uninstallation
        run: sudo crontab -l

      # Step 22: Final network test
      - name: Final Network Test
        run: curl "${{ env.IP_SERVICE_URL }}"
